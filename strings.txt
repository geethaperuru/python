>>> message = """Hello geetha , is' "cct" fine"""

>>> print(message)
Hello geetha , is' "cct" fine

length
>>> len(message)
29

>>> print(message.count(l))
Traceback (most recent call last):
  File "<pyshell#3>", line 1, in <module>
    print(message.count(l))
NameError: name 'l' is not defined

>>> print(message.count('l'))
2

>>> print(message.count('c'))
2

>>> print(message.count('s'))
1

//attributes in replace are case sensitive
>>> message = message.replace('hello','hi')

>>> print(message)
  Hello geetha , is' "cct" fine

>>> message = message.replace('Hello','hi')

>>> print(message)
hi geetha , is' "cct" fine

>>> greeting = 'hi'

>>> name = 'geetha'

//format
>>> welcomeMessage = '{},{}.How are you ?'.format(greeting,name)

>>> print(welcomeMessage)
hi,geetha.How are you ?

>>> introduction = f'{greeting} everyone, I am {name}'

>>> print(introduction)
hi everyone, I am geetha

>>> capitalIntro = f'{greeting} everyone, I am {name.upper()}'

>>> print(capitalIntro)
hi everyone, I am GEETHA

// gives all the methods that are available for string name
>>> print(dir(name))
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'removeprefix', 'removesuffix', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']

//gives all the methods that are available for string class
>>> print(help(str))
